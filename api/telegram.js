// api/telegram.js
export default async function handler(req, res) {
  if (req.method === 'POST') {
    try {
      const update = req.body;
      console.log('üì® Received Telegram update');
      
      // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
      if (update.message && update.message.text) {
        const token = process.env.TELEGRAM_BOT_TOKEN || '8006769060:AAEGAKhjUeuAXfnsQWtdLcKpAjkJrrGQ1Fk';
        const chatId = update.message.chat.id;
        const userText = update.message.text;
        
        console.log(`üí¨ Message from ${chatId}: ${userText}`);
        console.log(`üîë Using token: ${token.substring(0, 10)}...`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ Telegram API
        const telegramResponse = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            chat_id: chatId,
            text: `ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${userText}"\n\n–ì–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—Ç–∞—Ç–µ–π!`
          })
        });
        
        const result = await telegramResponse.json();
        console.log('üì§ Telegram API response:', result);
        
        if (telegramResponse.ok) {
          console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram');
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', result);
        }
      }
      
      // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 OK –¥–ª—è Telegram
      res.status(200).json({ status: 'ok' });
      
    } catch (error) {
      console.error('üí• Error processing webhook:', error);
      res.status(200).json({ status: 'error', message: error.message });
    }
  } else {
    res.status(405).json({ error: 'Method not allowed' });
  }
}
