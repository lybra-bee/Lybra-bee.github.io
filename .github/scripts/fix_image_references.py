#!/usr/bin/env python3
import os
import re
import glob
from pathlib import Path

def generate_slug(text):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    text = text.lower()
    text = re.sub(r'[^a-z0-9\s-]', '', text)
    text = text.replace(' ', '-')
    text = re.sub(r'-+', '-', text)
    return text[:50]

def fix_image_references():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç—å—è—Ö"""
    posts_dir = "content/posts"
    images_dir = "assets/images/posts"
    
    print("üîç –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º mapping: –∏–º—è —Ñ–∞–π–ª–∞ -> –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_mapping = {}
    for img_path in glob.glob(f"{images_dir}/*.png"):
        stem = Path(img_path).stem
        image_mapping[stem] = f"/assets/images/posts/{Path(img_path).name}"
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(image_mapping)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—å–∏
    updated_count = 0
    for post_file in glob.glob(f"{posts_dir}/*.md"):
        try:
            with open(post_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            post_stem = Path(post_file).stem
            
            # –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º
            if post_stem in image_mapping:
                image_path = image_mapping[post_stem]
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ image
                if 'image:' in content:
                    new_content = re.sub(
                        r'image:\s*["\'].*?["\']', 
                        f'image: "{image_path}"', 
                        content
                    )
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Å ---
                    lines = content.split('\n')
                    for i, line in enumerate(lines):
                        if line.strip() == '---':
                            lines.insert(i + 1, f'image: "{image_path}"')
                            break
                    new_content = '\n'.join(lines)
                
                if new_content != content:
                    with open(post_file, 'w', encoding='utf-8') as f:
                        f.write(new_content)
                    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {post_stem} -> {image_path}")
                    updated_count += 1
                else:
                    print(f"‚úì –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ: {post_stem}")
            else:
                print(f"‚ö†Ô∏è –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: {post_stem}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {post_file}: {e}")
    
    print(f"üéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {updated_count}")

if __name__ == "__main__":
    fix_image_references()
