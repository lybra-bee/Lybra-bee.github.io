#!/usr/bin/env python3
import os
import re
import glob
from pathlib import Path

def generate_slug(text):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    text = text.lower()
    text = re.sub(r'[^a-z0-9\s-]', '', text)
    text = text.replace(' ', '-')
    text = re.sub(r'-+', '-', text)
    return text[:50]

def fix_image_references():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç—å—è—Ö"""
    posts_dir = "content/posts"
    images_dir = "assets/images/posts"
    
    print("üîç –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    existing_images = {}
    for img_path in glob.glob(f"{images_dir}/*.png"):
        img_name = Path(img_path).stem
        existing_images[img_name] = img_path
        print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_name}")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é
    for post_file in glob.glob(f"{posts_dir}/*.md"):
        try:
            with open(post_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏
            title_match = re.search(r'title:\s*["\'](.*?)["\']', content)
            if not title_match:
                print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ {post_file}")
                continue
                
            title = title_match.group(1)
            post_slug = generate_slug(title)
            post_name = Path(post_file).stem
            
            print(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏: {post_name} -> '{title}'")
            
            # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            matching_image = None
            possible_names = [post_slug, post_name, post_name.replace('-', ' ')]
            
            for name in possible_names:
                if name in existing_images:
                    matching_image = existing_images[name]
                    break
            
            if matching_image:
                image_path = f"/assets/images/posts/{Path(matching_image).name}"
                print(f"üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º frontmatter
                if 'image:' in content:
                    # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    new_content = re.sub(
                        r'image:\s*["\'].*?["\']', 
                        f'image: "{image_path}"', 
                        content
                    )
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–µ image
                    new_content = content.replace('title:', f'image: "{image_path}"\ntitle:')
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                if new_content != content:
                    with open(post_file, 'w', encoding='utf-8') as f:
                        f.write(new_content)
                    print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {post_file}")
                else:
                    print(f"‚úÖ –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ: {post_file}")
                    
            else:
                print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: {post_name}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {post_file}: {e}")

if __name__ == "__main__":
    fix_image_references()
