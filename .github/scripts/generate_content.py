#!/usr/bin/env python3
import os
import json
import requests
import random
from datetime import datetime
import glob

def generate_content():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - —Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –æ—Å—Ç–∞–≤–ª—è—Ç—å
    KEEP_LAST_ARTICLES = 3
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏
    clean_old_articles(KEEP_LAST_ARTICLES)
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ–º
    topics = [
        "–í–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ 2024: React, Vue, Svelte",
        "Serverless –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π", 
        "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        "–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (PWA)",
        "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
        "WebAssembly –∏ –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "JAMstack –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã",
        "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã vs –º–æ–Ω–æ–ª–∏—Ç—ã –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        "TypeScript vs JavaScript –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        "GraphQL vs REST API: —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å –≤ 2024"
    ]
    
    selected_topic = random.choice(topics)
    print(f"üìù –¢–µ–º–∞: {selected_topic}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ OpenRouter
    api_key = os.getenv('OPENROUTER_API_KEY')
    content = ""
    model_used = "–õ–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"
    api_success = False
    
    if api_key and api_key != "":
        # –ü–†–û–í–ï–†–ï–ù–ù–´–ï –†–ê–ë–û–ß–ò–ï –ú–û–î–ï–õ–ò (–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
        working_models = [
            "mistralai/mistral-7b-instruct",      # ‚úÖ –ü–†–û–í–ï–†–ï–ù–ê - –†–ê–ë–û–¢–ê–ï–¢
            "google/gemini-pro",                  # ‚úÖ –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            "anthropic/claude-3-haiku",           # ‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
            "meta-llama/llama-3-8b-instruct",     # ‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –º–æ–¥–µ–ª—å
            "huggingfaceh4/zephyr-7b-beta",       # ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è
            "openchat/openchat-7b",               # ‚ö†Ô∏è –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å
            "google/palm-2-chat-bison-32k"        # ‚ö†Ô∏è –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å
        ]
        
        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º —Ä–∞–±–æ—á—É—é
        for selected_model in working_models:
            try:
                print(f"üîÑ –ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å: {selected_model}")
                
                response = requests.post(
                    "https://openrouter.ai/api/v1/chat/completions",
                    headers={
                        "Content-Type": "application/json",
                        "Authorization": f"Bearer {api_key}",
                        "HTTP-Referer": "https://github.com",
                        "X-Title": "AI Blog Generator"
                    },
                    json={
                        "model": selected_model,
                        "messages": [
                            {
                                "role": "user",
                                "content": f"–ù–∞–ø–∏—à–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ —Ç–µ–º—É: {selected_topic}. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ ##, **–∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º** –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏. –û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –æ–±—ä–µ–º 200-300 —Å–ª–æ–≤. –°–¥–µ–ª–∞–π —Å—Ç–∞—Ç—å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –∏ –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."
                            }
                        ],
                        "max_tokens": 500,
                        "temperature": 0.7,
                        "top_p": 0.9
                    },
                    timeout=15
                )
                
                print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                
                if response.status_code == 200:
                    data = response.json()
                    if 'choices' in data and len(data['choices']) > 0:
                        content = data['choices'][0]['message']['content']
                        model_used = selected_model
                        api_success = True
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ {selected_model}")
                        
                        # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–∞–≤—ã—á–µ–∫
                        content = content.replace('"""', '').replace("'''", "").strip()
                        break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    else:
                        print(f"‚ö†Ô∏è –ù–µ—Ç choices –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç {selected_model}")
                else:
                    error_msg = response.text[:100] if response.text else "No error message"
                    print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code} –æ—Ç {selected_model}: {error_msg}")
                    
            except Exception as e:
                print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å {selected_model}: {e}")
                continue  # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –º–æ–¥–µ–ª—å
        
        if not api_success:
            print("‚ùå –í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback")
            content = generate_fallback_content(selected_topic)
    else:
        print("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π")
        content = generate_fallback_content(selected_topic)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
    date = datetime.now().strftime("%Y-%m-%d")
    slug = generate_slug(selected_topic)
    filename = f"content/posts/{date}-{slug}.md"
    
    frontmatter = generate_frontmatter(selected_topic, content, model_used, api_success)
    
    os.makedirs("content/posts", exist_ok=True)
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(frontmatter)
    
    print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
    
    # –ü–æ–∫–∞–∂–µ–º –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    with open(filename, 'r', encoding='utf-8') as f:
        preview = f.read(400)
    print(f"üìÑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:\n{preview}...")
    
    return filename

def clean_old_articles(keep_last=3):
    """–û—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç–∞—Ç–µ–π, —É–¥–∞–ª—è–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ"""
    print(f"üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π, –æ—Å—Ç–∞–≤–ª—è–µ–º {keep_last} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ md —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ posts
    articles = glob.glob("content/posts/*.md")
    
    if not articles:
        print("üìÅ –ù–µ—Ç —Å—Ç–∞—Ç–µ–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ)
    articles.sort(key=os.path.getmtime)
    
    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç–∞—Ç–µ–π
    articles_to_keep = articles[-keep_last:]
    articles_to_delete = articles[:-keep_last]
    
    print(f"üìä –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º: {len(articles_to_keep)}")
    print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º: {len(articles_to_delete)}")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏
    for article_path in articles_to_delete:
        try:
            os.remove(article_path)
            print(f"‚ùå –£–¥–∞–ª–µ–Ω–æ: {os.path.basename(article_path)}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {article_path}: {e}")
    
    # –ü–æ–∫–∞–∂–µ–º –∫–∞–∫–∏–µ —Å—Ç–∞—Ç—å–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    remaining_articles = glob.glob("content/posts/*.md")
    remaining_articles.sort(key=os.path.getmtime, reverse=True)
    
    print("üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç–∞—Ç—å–∏ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É):")
    for i, article in enumerate(remaining_articles[:5], 1):
        print(f"   {i}. {os.path.basename(article)}")

def generate_fallback_content(topic):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è fallback –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    return f"""## {topic}

–í 2024 –≥–æ–¥—É **{topic.split(':')[0]}** –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–¥—É—Å—Ç—Ä–∏—é –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

### –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏

- **–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã** –∫ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- **–£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å** –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º
- **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ cloud-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏**
- **–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** –∏ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
- **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è** –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ deployment

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø–µ—Ä–µ–¥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, –ø—Ä–µ–¥–ª–∞–≥–∞—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ workflow –∏ —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞.

–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç, —Ç—Ä–µ–±—É—è –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–∞–º."""

def generate_slug(topic):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã"""
    slug = topic.lower()
    # –ó–∞–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    replacements = {
        ' ': '-',
        ':': '',
        '(': '',
        ')': '',
        '/': '-',
        '\\': '-',
        '.': '',
        ',': ''
    }
    
    for old, new in replacements.items():
        slug = slug.replace(old, new)
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ-ASCII —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –¥–µ—Ñ–∏—Å–∞
    slug = ''.join(c for c in slug if c.isalnum() or c == '-')
    
    # –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ—Ñ–∏—Å—ã
    while '--' in slug:
        slug = slug.replace('--', '-')
    
    # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤
    return slug[:40]

def generate_frontmatter(topic, content, model_used, api_success):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è frontmatter –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"""
    current_time = datetime.now()
    status = "‚úÖ API –≥–µ–Ω–µ—Ä–∞—Ü–∏—è" if api_success else "‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"
    
    return f"""---
title: "{topic}"
date: {datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")}
draft: false
description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ {topic}"
tags: ["–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "2024"]
categories: ["–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞"]
---

# {topic}

{content}

---

### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏

- **–ú–æ–¥–µ–ª—å AI:** {model_used}
- **–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** {current_time.strftime("%d.%m.%Y %H:%M UTC")}
- **–¢–µ–º–∞:** {topic}
- **–°—Ç–∞—Ç—É—Å:** {status}
- **–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å:** –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏

> *–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ GitHub Actions + OpenRouter*
"""

if __name__ == "__main__":
    generate_content()
