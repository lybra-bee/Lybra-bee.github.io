#!/usr/bin/env python3
import os
import json
import requests
import random
from datetime import datetime
import glob

def generate_content():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - —Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π –æ—Å—Ç–∞–≤–ª—è—Ç—å
    KEEP_LAST_ARTICLES = 3
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏
    clean_old_articles(KEEP_LAST_ARTICLES)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ç–µ–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–¥–æ–≤ AI –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
    selected_topic = generate_ai_trend_topic()
    print(f"üìù –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–µ–º–∞: {selected_topic}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ OpenRouter
    api_key = os.getenv('OPENROUTER_API_KEY')
    content = ""
    model_used = "–õ–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"
    api_success = False
    
    if api_key and api_key != "":
        # –ü–†–û–í–ï–†–ï–ù–ù–´–ï –†–ê–ë–û–ß–ò–ï –ú–û–î–ï–õ–ò (–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
        working_models = [
            "mistralai/mistral-7b-instruct",      # ‚úÖ –ü–†–û–í–ï–†–ï–ù–ê - –†–ê–ë–û–¢–ê–ï–¢
            "google/gemini-pro",                  # ‚úÖ –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            "anthropic/claude-3-haiku",           # ‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å
            "meta-llama/llama-3-8b-instruct",     # ‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω–∞—è –º–æ–¥–µ–ª—å
            "huggingfaceh4/zephyr-7b-beta",       # ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è
        ]
        
        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º —Ä–∞–±–æ—á—É—é
        for selected_model in working_models:
            try:
                print(f"üîÑ –ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å: {selected_model}")
                
                response = requests.post(
                    "https://openrouter.ai/api/v1/chat/completions",
                    headers={
                        "Content-Type": "application/json",
                        "Authorization": f"Bearer {api_key}",
                        "HTTP-Referer": "https://github.com",
                        "X-Title": "AI Blog Generator"
                    },
                    json={
                        "model": selected_model,
                        "messages": [
                            {
                                "role": "user",
                                "content": f"–ù–∞–ø–∏—à–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ —Ç–µ–º—É: {selected_topic}. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ ##, **–∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º** –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏. –û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –æ–±—ä–µ–º 300-400 —Å–ª–æ–≤. –°–¥–µ–ª–∞–π —Å—Ç–∞—Ç—å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ–π –∏ –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –û—Å–≤–µ—â–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã 2024-2025 –≥–æ–¥–∞."
                            }
                        ],
                        "max_tokens": 600,
                        "temperature": 0.7,
                        "top_p": 0.9
                    },
                    timeout=15
                )
                
                print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                
                if response.status_code == 200:
                    data = response.json()
                    if 'choices' in data and len(data['choices']) > 0:
                        content = data['choices'][0]['message']['content']
                        model_used = selected_model
                        api_success = True
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ {selected_model}")
                        
                        # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–∞–≤—ã—á–µ–∫
                        content = content.replace('"""', '').replace("'''", "").strip()
                        break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    else:
                        print(f"‚ö†Ô∏è –ù–µ—Ç choices –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç {selected_model}")
                else:
                    error_msg = response.text[:100] if response.text else "No error message"
                    print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code} –æ—Ç {selected_model}: {error_msg}")
                    
            except Exception as e:
                print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å {selected_model}: {e}")
                continue  # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –º–æ–¥–µ–ª—å
        
        if not api_success:
            print("‚ùå –í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback")
            content = generate_fallback_content(selected_topic)
    else:
        print("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π")
        content = generate_fallback_content(selected_topic)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
    date = datetime.now().strftime("%Y-%m-%d")
    slug = generate_slug(selected_topic)
    filename = f"content/posts/{date}-{slug}.md"
    
    frontmatter = generate_frontmatter(selected_topic, content, model_used, api_success)
    
    os.makedirs("content/posts", exist_ok=True)
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(frontmatter)
    
    print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
    
    # –ü–æ–∫–∞–∂–µ–º –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    with open(filename, 'r', encoding='utf-8') as f:
        preview = f.read(400)
    print(f"üìÑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:\n{preview}...")
    
    return filename

def generate_ai_trend_topic():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ç–µ–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–¥–æ–≤ AI –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π 2024-2025"""
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤
    tech_domains = [
        "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
        "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", 
        "–≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ AI",
        "–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ",
        "–æ–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞",
        "–±–æ–ª—å—à–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏",
        "–Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã",
        "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞",
        "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤–µ—â–µ–π",
        "–±–ª–æ–∫—á–µ–π–Ω –∏ Web3",
        "–∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
        "–æ–±–ª–∞—á–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è",
        "–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è",
        "–¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å",
        "–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å",
        "–±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞",
        "–±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–∑–µ–ª–µ–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
    ]
    
    # –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã 2024-2025
    current_trends = [
        "—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä—ã –∏ attention –º–µ—Ö–∞–Ω–∏–∑–º—ã",
        "–º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ AI —Å–∏—Å—Ç–µ–º—ã",
        "few-shot –∏ zero-shot –æ–±—É—á–µ–Ω–∏–µ",
        "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å –ø–∞–º—è—Ç—å—é",
        "–æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º",
        "–≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ-—Å–æ—Å—Ç—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
        "–¥–∏—Ñ—Ñ—É–∑–∏–æ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏",
        "—ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ AI",
        "—Ñ–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
        "–æ–±—ä—è—Å–Ω–∏–º—ã–π AI",
        "AI —ç—Ç–∏–∫–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
        "–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã",
        "–∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã",
        "AI –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π",
        "–Ω–µ–π—Ä–æ–º–æ—Ä—Ñ–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è",
        "–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏",
        "AI –≤ –º–µ–¥–∏—Ü–∏–Ω–µ –∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏",
        "—É–º–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –∏ IoT",
        "—É—Å—Ç–æ–π—á–∏–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω—ã–µ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –¥–≤–æ–π–Ω–∏–∫–∏"
    ]
    
    # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –æ—Ç—Ä–∞—Å–ª–∏
    applications = [
        "–≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        "–≤ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö", 
        "–≤ –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö",
        "–≤ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö",
        "–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        "–≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö",
        "–≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö",
        "–≤ healthcare —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö",
        "–≤ —É–º–Ω–æ–º –¥–æ–º–µ",
        "–≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
        "–≤ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ",
        "–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö",
        "–≤ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è—Ö –∏ –∏–≥—Ä–∞—Ö",
        "–≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
        "–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—Ü–∏–∏",
        "–≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏",
        "–≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ",
        "–≤ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö"
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    domain = random.choice(tech_domains)
    trend = random.choice(current_trends)
    application = random.choice(applications)
    
    # –†–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ç–µ–º –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    topic_formats = [
        f"{trend}: –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ {domain} {application}",
        f"{domain} 2025: –∫–∞–∫ {trend} –º–µ–Ω—è—é—Ç {application}",
        f"{trend} –≤ {domain} - –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã {application}",
        f"–ë—É–¥—É—â–µ–µ {domain}: {trend} –∏ –∏—Ö impact –Ω–∞ {application}",
        f"{trend} —Ä–µ–≤–æ–ª—é—Ü–∏—è –≤ {domain} –¥–ª—è {application}",
        f"–ö–∞–∫ {trend} —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç {domain} –≤ {application}",
        f"{domain} —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è: {trend} {application}",
        f"{trend} –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ {domain} –¥–ª—è {application}",
        f"–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –≤ {domain}: {trend} –º–µ–Ω—è—é—â–∏–µ {application}",
        f"{trend} - –Ω–æ–≤—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –≤ {domain} –¥–ª—è {application}"
    ]
    
    selected_topic = random.choice(topic_formats)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–¥ –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏
    if random.random() > 0.5:
        selected_topic = f"{selected_topic} –≤ 2024-2025"
    
    return selected_topic

def clean_old_articles(keep_last=3):
    """–û—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç–∞—Ç–µ–π, —É–¥–∞–ª—è–µ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ"""
    print(f"üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π, –æ—Å—Ç–∞–≤–ª—è–µ–º {keep_last} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ md —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ posts
    articles = glob.glob("content/posts/*.md")
    
    if not articles:
        print("üìÅ –ù–µ—Ç —Å—Ç–∞—Ç–µ–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ)
    articles.sort(key=os.path.getmtime)
    
    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç–∞—Ç–µ–π
    articles_to_keep = articles[-keep_last:]
    articles_to_delete = articles[:-keep_last]
    
    print(f"üìä –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º: {len(articles_to_keep)}")
    print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º: {len(articles_to_delete)}")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞—Ç—å–∏
    for article_path in articles_to_delete:
        try:
            os.remove(article_path)
            print(f"‚ùå –£–¥–∞–ª–µ–Ω–æ: {os.path.basename(article_path)}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {article_path}: {e}")
    
    # –ü–æ–∫–∞–∂–µ–º –∫–∞–∫–∏–µ —Å—Ç–∞—Ç—å–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    remaining_articles = glob.glob("content/posts/*.md")
    remaining_articles.sort(key=os.path.getmtime, reverse=True)
    
    print("üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç–∞—Ç—å–∏ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É):")
    for i, article in enumerate(remaining_articles[:5], 1):
        print(f"   {i}. {os.path.basename(article)}")

def generate_fallback_content(topic):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è fallback –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Ç–µ–º—ã"""
    return f"""## {topic}

–í 2024-2025 –≥–æ–¥–∞—Ö **{topic.split(':')[0]}** –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç.

### –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏

- **–ü–µ—Ä–µ–¥–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã** –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
- **–£–ª—É—á—à–µ–Ω–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å** –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
- **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ–±–ª–∞—á–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏** –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
- **–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** –∏ —ç—Ç–∏—á–µ—Å–∫–∏–µ considerations
- **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è** —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π impact

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç cutting-edge –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä–æ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ workflow, —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ —Ä–µ—à–µ–Ω–∏—è complex problems.

–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç —Ç—Ä–µ–±—É–µ—Ç continuous learning –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ emerging challenges –∏ opportunities."""

def generate_slug(topic):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã"""
    slug = topic.lower()
    # –ó–∞–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    replacements = {
        ' ': '-',
        ':': '',
        '(': '',
        ')': '',
        '/': '-',
        '\\': '-',
        '.': '',
        ',': '',
        '&': 'and'
    }
    
    for old, new in replacements.items():
        slug = slug.replace(old, new)
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ-ASCII —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –¥–µ—Ñ–∏—Å–∞
    slug = ''.join(c for c in slug if c.isalnum() or c == '-')
    
    # –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ—Ñ–∏—Å—ã
    while '--' in slug:
        slug = slug.replace('--', '-')
    
    # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤
    return slug[:50]

def generate_frontmatter(topic, content, model_used, api_success):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è frontmatter –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"""
    current_time = datetime.now()
    status = "‚úÖ API –≥–µ–Ω–µ—Ä–∞—Ü–∏—è" if api_success else "‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã
    tags = ["–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π-–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏", "2024-2025"]
    if "–≤–µ–±" in topic.lower() or "web" in topic.lower():
        tags.append("–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞")
    if "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" in topic.lower() or "security" in topic.lower():
        tags.append("–∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
    if "–æ–±–ª–∞–∫–æ" in topic.lower() or "cloud" in topic.lower():
        tags.append("–æ–±–ª–∞—á–Ω—ã–µ-–≤—ã—á–∏—Å–ª–µ–Ω–∏—è")
    if "–¥–∞–Ω–Ω" in topic.lower() or "data" in topic.lower():
        tags.append("–∞–Ω–∞–ª–∏–∑-–¥–∞–Ω–Ω—ã—Ö")
    
    return f"""---
title: "{topic}"
date: {datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")}
draft: false
description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ {topic}"
tags: {json.dumps(tags, ensure_ascii=False)}
categories: ["–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"]
---

# {topic}

{content}

---

### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏

- **–ú–æ–¥–µ–ª—å AI:** {model_used}
- **–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** {current_time.strftime("%d.%m.%Y %H:%M UTC")}
- **–¢–µ–º–∞:** {topic}
- **–°—Ç–∞—Ç—É—Å:** {status}
- **–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å:** –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
- **–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å:** –¢—Ä–µ–Ω–¥—ã 2024-2025

> *–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ GitHub Actions + OpenRouter*
"""

if __name__ == "__main__":
    generate_content()
