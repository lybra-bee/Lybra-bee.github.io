#!/usr/bin/env python3
import os
import json
import requests
import random
from datetime import datetime

def generate_content():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    topics = [
        "–í–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ 2024: React, Vue, Svelte",
        "Serverless –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π", 
        "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
        "–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (PWA)",
        "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
    ]
    
    selected_topic = random.choice(topics)
    print(f"üìù –¢–µ–º–∞: {selected_topic}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ OpenRouter
    api_key = os.getenv('OPENROUTER_API_KEY')
    content = ""
    
    if api_key:
        try:
            response = requests.post(
                "https://openrouter.ai/api/v1/chat/completions",
                headers={
                    "Content-Type": "application/json",
                    "Authorization": f"Bearer {api_key}"
                },
                json={
                    "model": "google/palm-2-chat-bison-32k:free",
                    "messages": [
                        {
                            "role": "user",
                            "content": f"–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–±–∑–∞—Ü –æ {selected_topic} –Ω–∞ —Ä—É—Å—Å–∫–æ–º. 100-200 —Å–ª–æ–≤."
                        }
                    ],
                    "max_tokens": 300
                },
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                content = data['choices'][0]['message']['content']
                print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ API")
            else:
                raise Exception(f"API error: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
            content = f"–≠—Ç–æ —Å—Ç–∞—Ç—å—è –æ {selected_topic}. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    else:
        print("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
        content = f"–≠—Ç–æ —Å—Ç–∞—Ç—å—è –æ {selected_topic}. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    date = datetime.now().strftime("%Y-%m-%d")
    slug = selected_topic.lower().replace(' ', '-').replace(':', '')[:30]
    filename = f"content/posts/{date}-{slug}.md"
    
    frontmatter = f"""---
title: "{selected_topic}"
date: {datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")}
draft: false
tags: ["–≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"]
---

# {selected_topic}

{content}

> *–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ {datetime.now().strftime("%d.%m.%Y %H:%M")}*
"""
    
    os.makedirs("content/posts", exist_ok=True)
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(frontmatter)
    
    print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
    return filename

if __name__ == "__main__":
    generate_content()
