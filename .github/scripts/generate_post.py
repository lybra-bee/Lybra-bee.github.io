import requests
import os
import json
from datetime import datetime

def generate_with_huggingface(prompt):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Hugging Face"""
    HF_API_KEY = os.getenv('HF_API_KEY')
    if not HF_API_KEY:
        return "–û—à–∏–±–∫–∞: HF_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    
    API_URL = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2"
    headers = {"Authorization": f"Bearer {HF_API_KEY}"}
    
    payload = {
        "inputs": prompt,
        "parameters": {
            "max_new_tokens": 500,
            "temperature": 0.8,
            "do_sample": True,
            "return_full_text": False
        }
    }
    
    try:
        print(f"üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è: {prompt[:50]}...")
        response = requests.post(API_URL, headers=headers, json=payload, timeout=60)
        
        if response.status_code == 200:
            result = response.json()
            if isinstance(result, list) and len(result) > 0:
                return result[0]['generated_text'].strip()
            else:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç API"
        else:
            return f"–û—à–∏–±–∫–∞ API: {response.status_code}"
            
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"

def create_ai_blog_post():
    """–°–æ–∑–¥–∞–Ω–∏–µ AI-—Å—Ç–∞—Ç—å–∏"""
    topics = [
        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –≤–µ–±-–¥–∏–∑–∞–π–Ω–∞ –≤ 2024 –≥–æ–¥—É",
        "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏–∑—É—á–∞—Ç—å JavaScript: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã",
        "CSS Grid –∏ Flexbox: –ª—É—á—à–µ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –ø–æ–º–æ—â—å—é GitHub Actions",
        "–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–µ–±-—Å–∞–π—Ç–æ–≤",
        "PWA –ø—Ä–æ—Ç–∏–≤ –Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å",
        "–í–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"
    ]
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ç–µ–º—É
    import random
    topic = random.choice(topics)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º—Ç –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
    prompt = f"""–ù–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ —Ç–µ–º—É "{topic}" –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –±–ª–æ–≥–∞.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π —è–∑—ã–∫
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π —Å—Ç–∞—Ç—å—é —Å –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
- –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ
- –°–¥–µ–ª–∞–π –∑–∞–∫–ª—é—á–µ–Ω–∏–µ —Å –≤—ã–≤–æ–¥–∞–º–∏
- –í–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown

–°—Ç–∞—Ç—å—è:"""
    
    print(f"üìù –¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏: {topic}")
    content = generate_with_huggingface(prompt)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    date_str = datetime.now().strftime('%Y-%m-%d')
    slug = topic.lower().replace(' ', '-').replace(':', '').replace(',', '')
    filename = f"content/posts/{date_str}-{slug[:50]}.md"
    
    front_matter = f"""---
title: "{topic}"
date: {datetime.now().isoformat()}
draft: false
description: "–°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é Hugging Face AI"
tags: ["ai", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"]
---

{content}
"""
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ—Ç
    os.makedirs(os.path.dirname(filename), exist_ok=True)
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(front_matter)
    
    print(f"‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞: {filename}")
    return True

if __name__ == "__main__":
    create_ai_blog_post()
