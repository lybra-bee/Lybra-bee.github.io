name: Generate and Deploy Hugo Site

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # каждый день в 6:00 UTC
  push:
    branches: [ main ]

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GIT_TOKEN }}
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pillow pyyaml

    - name: Generate article and image
      run: |
        python .github/scripts/generate_content.py
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        FUSIONBRAIN_API_KEY: ${{ secrets.FUSIONBRAIN_API_KEY }}
        FUSION_SECRET_KEY: ${{ secrets.FUSION_SECRET_KEY }}

    - name: Force copy images to static
      run: |
        echo "=== ПРИНУДИТЕЛЬНОЕ КОПИРОВАНИЕ ИЗОБРАЖЕНИЙ ==="
        
        # Создаем директории
        mkdir -p static/images/posts
        
        # Копируем все изображения из assets в static
        if [ -d "assets/images/posts" ] && [ "$(ls -A assets/images/posts 2>/dev/null)" ]; then
            echo "Копируем изображения из assets в static..."
            cp -v assets/images/posts/*.png static/images/posts/ 2>/dev/null || echo "No PNG files"
            cp -v assets/images/posts/*.jpg static/images/posts/ 2>/dev/null || echo "No JPG files"
            cp -v assets/images/posts/*.jpeg static/images/posts/ 2>/dev/null || echo "No JPEG files"
            
            echo "Скопированные изображения:"
            ls -la static/images/posts/ | head -10
            echo "Всего изображений: $(ls -1 static/images/posts/ | wc -l)"
        else
            echo "Нет изображений для копирования, создаем placeholder..."
            mkdir -p static/images/
            # Создаем простой placeholder
            echo "AI Generated Image Placeholder" > static/images/placeholder.jpg
        fi

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.120.4'
        extended: true

    - name: Build Hugo site
      run: |
        echo "=== Building Hugo site ==="
        hugo --minify --verbose
        echo "=== Build completed ==="

    - name: Debug - Check files
      run: |
        echo "=== ПРОВЕРКА ФАЙЛОВ ==="
        echo "1. Изображения в assets:"
        ls -la assets/images/posts/ 2>/dev/null || echo "  ❌ Нет assets/images/posts"
        
        echo "2. Изображения в static:"
        ls -la static/images/posts/ 2>/dev/null || echo "  ❌ Нет static/images/posts"
        find static/ -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" | head -10
        
        echo "3. Данные галереи:"
        ls -la data/ 2>/dev/null || echo "  ❌ Нет data directory"
        if [ -f "data/gallery.yaml" ]; then
            echo "  ✅ gallery.yaml существует"
            echo "  Первые 5 записей:"
            head -15 data/gallery.yaml
        fi
        
        echo "4. Сгенерированные статьи:"
        find content/posts/ -name "*.md" | head -5

    - name: Create test files
      run: |
        echo "Создаем тестовые файлы для проверки..."
        echo "Deployment successful: $(date)" > public/DEPLOY_TEST.txt
        echo "Git SHA: ${{ github.sha }}" >> public/DEPLOY_TEST.txt
        echo "Workflow: ${{ github.workflow }}" >> public/DEPLOY_TEST.txt

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./public
        force_orphan: true
        keep_files: false
        enable_jekyll: false
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'

    - name: Verify deployment
      run: |
        echo "✅ Deployment completed successfully!"
        echo "📅 Next scheduled run: daily at 06:00 UTC"
        echo "🌐 Site URL: https://lybra-bee.github.io"
        echo "📊 Test file: https://lybra-bee.github.io/DEPLOY_TEST.txt"
        echo "🖼️ Gallery: https://lybra-bee.github.io/gallery/"
        echo "📝 Articles: https://lybra-bee.github.io/posts/"

  verify:
    needs: generate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Check if site is accessible
      run: |
        echo "Waiting for GitHub Pages to deploy..."
        sleep 120  # Даем больше времени на деплой
        
        echo "Checking site availability..."
        if curl -s -f https://lybra-bee.github.io/DEPLOY_TEST.txt > /dev/null; then
            echo "✅ Site is accessible!"
            echo "📋 Test file content:"
            curl -s https://lybra-bee.github.io/DEPLOY_TEST.txt
        else
            echo "❌ Site is not accessible yet"
            echo "Check GitHub Pages settings:"
            echo "https://github.com/lybra-bee/lybra-bee.github.io/settings/pages"
        fi
