name: Generate and Deploy Hugo Site

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # каждый день в 6:00 UTC
  push:
    branches: [ main ]

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GIT_TOKEN }}
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pillow pyyaml

    - name: Generate article and image
      run: |
        python .github/scripts/generate_content.py
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        FUSIONBRAIN_API_KEY: ${{ secrets.FUSIONBRAIN_API_KEY }}
        FUSION_SECRET_KEY: ${{ secrets.FUSION_SECRET_KEY }}

    - name: Copy images to static directory
      run: |
        echo "=== Copying images to static folder ==="
        mkdir -p static/images/posts
        
        if [ -d "assets/images/posts" ] && [ "$(ls -A assets/images/posts)" ]; then
            echo "Copying images from assets/images/posts to static/images/posts"
            cp -r assets/images/posts/* static/images/posts/
            echo "Images in static folder:"
            ls -la static/images/posts/ | head -10
            echo "Total images: $(ls -1 static/images/posts/ | wc -l)"
        else
            echo "No images found in assets/images/posts, creating placeholder..."
            mkdir -p static/images/
            # Create a simple placeholder image
            convert -size 800x400 xc:#0f172a -pointsize 30 -fill white -gravity center -annotate +0+0 "AI Generated Image" static/images/placeholder.jpg 2>/dev/null || \
            echo "Placeholder text" > static/images/placeholder.jpg
        fi

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.120.4'
        extended: true

    - name: Build Hugo site
      run: |
        echo "=== Building Hugo site ==="
        hugo --minify --verbose
        echo "=== Build completed ==="

    - name: Debug - Show built files
      run: |
        echo "=== PUBLIC DIRECTORY STRUCTURE ==="
        ls -la public/
        echo "=== HTML FILES ==="
        find public/ -name "*.html" | head -10
        echo "=== IMAGES IN PUBLIC ==="
        find public/ -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" | head -10
        echo "=== CREATE TEST FILE ==="
        echo "Workflow successful: $(date)" > public/TEST_DEPLOY.txt
        echo "Build timestamp: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> public/TEST_DEPLOY.txt
        echo "Git SHA: ${{ github.sha }}" >> public/TEST_DEPLOY.txt

    - name: Verify content files
      run: |
        echo "=== CONTENT POSTS ==="
        ls -la content/posts/ || echo "No content/posts directory"
        find content/posts/ -name "*.md" | head -5
        echo "=== DATA GALLERY ==="
        ls -la data/ || echo "No data directory"
        cat data/gallery.yaml 2>/dev/null || echo "No gallery data"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./public
        force_orphan: true
        keep_files: false
        enable_jekyll: false
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'

    - name: Verify deployment
      run: |
        echo "✅ Deployment completed successfully!"
        echo "📅 Next scheduled run: daily at 06:00 UTC"
        echo "🌐 Site URL: https://lybra-bee.github.io"
        echo "📊 Test file: https://lybra-bee.github.io/TEST_DEPLOY.txt"
        echo "🖼️ Gallery: https://lybra-bee.github.io/gallery/"
        echo "📝 Articles: https://lybra-bee.github.io/posts/"

  # Опционально: добавьте job для проверки деплоя
  verify:
    needs: generate
    runs-on: ubuntu-latest
    steps:
    - name: Check if site is accessible
      run: |
        echo "Waiting for GitHub Pages to deploy..."
        sleep 60
        echo "Checking site availability..."
        if curl -s -f https://lybra-bee.github.io/TEST_DEPLOY.txt > /dev/null; then
            echo "✅ Site is accessible!"
            echo "📋 Test file content:"
            curl -s https://lybra-bee.github.io/TEST_DEPLOY.txt
        else
            echo "❌ Site is not accessible yet"
            echo "Check GitHub Pages settings:"
            echo "https://github.com/lybra-bee/lybra-bee.github.io/settings/pages"
        fi
