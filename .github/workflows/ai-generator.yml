name: AI Content Generator

on:
  workflow_dispatch:
    inputs:
      article_count:
        description: 'Number of articles to generate'
        required: true
        default: '1'
        type: choice
        options:
        - '1'
        - '2'
        - '3'
  schedule:
    - cron: '0 8 * * *'  # Every day at 8 AM

permissions:
  contents: write

jobs:
  generate-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install requests pillow python-dotenv

    - name: Create content directories
      run: |
        mkdir -p content/posts
        mkdir -p static/images/posts

    - name: Generate AI content
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "üîÑ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..."
        echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
        
        if [ -f ".github/scripts/generate_content.py" ]; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω .github/scripts/generate_content.py"
            python .github/scripts/generate_content.py --count ${{ github.event.inputs.article_count }} --debug
        else
            echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            find . -name "*.py" -type f
            exit 1
        fi

    - name: Commit and push generated content
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
        git fetch origin
        git reset --hard origin/main
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        git add content/posts/
        git add static/images/posts/
        
        # –ö–æ–º–º–∏—Ç –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if ! git diff --cached --quiet; then
            git commit -m "Auto-generated AI content $(date +'%Y-%m-%d %H:%M')"
            git push origin main
            echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        fi

  setup-webhook:
    runs-on: ubuntu-latest
    needs: generate-content
    if: success()
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Telegram Webhook
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        VERCEL_URL: "https://lybra-bee-github-io.vercel.app"
      run: |
        echo "üîÑ Setting up webhook..."
        response=$(curl -s -X POST \
          "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/setWebhook" \
          -H "Content-Type: application/json" \
          -d "{\"url\": \"$VERCEL_URL/api/telegram\", \"max_connections\": 100, \"drop_pending_updates\": true}")
        
        echo "üìã Webhook response: $response"
        
        echo "üîç Webhook status:"
        curl -s "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/getWebhookInfo" | jq .
