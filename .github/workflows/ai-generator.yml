name: AI Content Generator

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 1'

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Cleanup old structure
        run: |
          echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É..."
          rm -rf content/posts/posts/ 2>/dev/null || true
          rm -rf content/posts/projects/ 2>/dev/null || true

      - name: Create content directory
        run: mkdir -p content/posts

      - name: Generate article with AI test
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          echo "=== –¢–ï–°–¢–ò–†–£–ï–ú –†–ê–ó–õ–ò–ß–ù–´–ï –ú–û–î–ï–õ–ò ==="
          echo "–î–ª–∏–Ω–∞ HF_API_KEY: ${#HF_API_KEY} —Å–∏–º–≤–æ–ª–æ–≤"
          
          if [ -z "$HF_API_KEY" ] || [ "$HF_API_KEY" == "" ]; then
            echo "‚ùå HF_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π!"
            CONTENT="–û—à–∏–±–∫–∞: API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ HF_API_KEY –≤ Settings ‚Üí Secrets ‚Üí Actions"
          else
            echo "üîå –û–ø—Ä–∞—à–∏–≤–∞–µ–º –º–æ–¥–µ–ª–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏..."
            
            # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –æ–ø—Ä–æ—Å–∞ (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞)
            MODELS=(
              "deepseek-ai/DeepSeek-V3"
              "deepseek-ai/deepseek-llm-7b"
              "microsoft/DialoGPT-medium"
              "gpt2"
              "distilgpt2"
              "facebook/blenderbot-400M-distill"
            )
            
            CONTENT=""
            SUCCESS_MODEL=""
            
            for model in "${MODELS[@]}"; do
              echo "---"
              echo "üîÑ –ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å: $model"
              
              response=$(curl -s -X POST \
                -H "Authorization: Bearer $HF_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "inputs": "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∞–±–∑–∞—Ü –æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ —Ç—Ä–µ–Ω–¥–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:",
                  "parameters": {
                    "max_new_tokens": 150,
                    "temperature": 0.8,
                    "do_sample": true
                  }
                }' \
                "https://api-inference.huggingface.co/models/$model" 2>&1)
              
              if [[ "$response" == *"generated_text"* ]]; then
                echo "‚úÖ –£—Å–ø–µ—Ö! –ú–æ–¥–µ–ª—å $model —Ä–∞–±–æ—Ç–∞–µ—Ç!"
                CONTENT=$(echo "$response" | python3 -c "import json, sys; data=json.load(sys.stdin); print(data[0]['generated_text'])" | head -10)
                SUCCESS_MODEL="$model"
                break
              elif [[ "$response" == *"404"* ]] || [[ "$response" == *"Not Found"* ]]; then
                echo "‚ùå –ú–æ–¥–µ–ª—å $model –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
              elif [[ "$response" == *"503"* ]] || [[ "$response" == *"loading"* ]]; then
                echo "‚è≥ –ú–æ–¥–µ–ª—å $model –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é"
              elif [[ "$response" == *"401"* ]] || [[ "$response" == *"Authorization"* ]]; then
                echo "üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—Ä–µ—Ä—ã–≤–∞–µ–º"
                CONTENT="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á."
                break
              else
                echo "‚ùå –û—à–∏–±–∫–∞ —Å –º–æ–¥–µ–ª—å—é $model: $response"
              fi
              
              # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
              sleep 2
            done
            
            if [ -z "$CONTENT" ]; then
              echo "‚ùå –ù–∏ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞"
              CONTENT="–í—Å–µ tested –º–æ–¥–µ–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å workflow –ø–æ–∑–∂–µ."
              SUCCESS_MODEL="none"
            fi
            
            echo "---"
            echo "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: $(if [ -n "$SUCCESS_MODEL" ]; then echo "–£—Å–ø–µ—Ö —Å $SUCCESS_MODEL"; else echo "–í—Å–µ –º–æ–¥–µ–ª–∏ failed"; fi)"
          fi
          
          echo "üìù –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å—é..."
          DATE=$(date +%Y-%m-%d)
          TIMESTAMP=$(date +%H-%M-%S)
          FILE="content/posts/${DATE}-${TIMESTAMP}-ai-article.md"
          
          # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å—é
          echo "---" > "$FILE"
          echo "title: \"AI –°—Ç–∞—Ç—å—è –æ—Ç ${TIMESTAMP}\"" >> "$FILE"
          echo "date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> "$FILE"
          echo "draft: false" >> "$FILE"
          echo "description: \"–°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å AI\"" >> "$FILE"
          echo "tags: [\"ai\", \"–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è\", \"—Ç–µ—Å—Ç\"]" >> "$FILE"
          echo "---" >> "$FILE"
          echo "" >> "$FILE"
          echo "# üöÄ AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞" >> "$FILE"
          echo "" >> "$FILE"
          echo "$CONTENT" >> "$FILE"
          echo "" >> "$FILE"
          echo "## üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏" >> "$FILE"
          echo "" >> "$FILE"
          echo "- **–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** $(date +"%Y-%m-%d %H:%M:%S")" >> "$FILE"
          echo "- **–ú–æ–¥–µ–ª—å:** ${SUCCESS_MODEL:-none}" >> "$FILE"
          echo "- **–°—Ç–∞—Ç—É—Å API:** $(if [ -n "$SUCCESS_MODEL" ]; then echo '‚úÖ –£—Å–ø–µ—à–Ω–æ'; else echo '‚ùå –û—à–∏–±–∫–∞'; fi)" >> "$FILE"
          echo "- **–î–ª–∏–Ω–∞ –∫–ª—é—á–∞:** ${#HF_API_KEY} —Å–∏–º–≤–æ–ª–æ–≤" >> "$FILE"
          echo "- **–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –º–æ–¥–µ–ª–µ–π:** ${#MODELS[@]}" >> "$FILE"
          echo "" >> "$FILE"
          echo "> *–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ GitHub Actions + Hugging Face API*" >> "$FILE"
          
          echo "‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: $FILE"
          echo "üìÑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:"
          head -20 "$FILE"

      - name: Commit changes
        run: |
          echo "=== –ö–û–ú–ú–ò–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ô ==="
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          git add content/posts/
          git status
          
          if ! git diff --staged --quiet; then
            git commit -m "ü§ñ AI-—Å—Ç–∞—Ç—å—è –æ—Ç $(date +%Y-%m-%d_%H-%M-%S)"
            git pull origin main --rebase
            git push origin main
            echo "‚úÖ –°—Ç–∞—Ç—å—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!"
          else
            echo "‚ùå –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
            echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ posts:"
            ls -la content/posts/
          fi

      - name: Final check
        run: |
          echo "=== –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ==="
          echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã:"
          find content/posts/ -name "*.md" -type f -exec ls -la {} \; | tail -5
          echo "–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π:"
          find content/posts/ -name "*.md" -type f | wc -l
