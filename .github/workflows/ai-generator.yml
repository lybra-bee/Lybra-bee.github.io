name: AI Content Generator

on:
  schedule:
    - cron: '0 12 * * *'  # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 12:00 UTC (15:00 –ú–°–ö)
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-content:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TZ: Europe/Moscow
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Check repository structure
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏:"
        ls -la
        
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .github:"
        ls -la .github/ || echo "–ü–∞–ø–∫–∞ .github –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .github/scripts:"
        ls -la .github/scripts/ || echo "–ü–∞–ø–∫–∞ .github/scripts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        
        echo "üìÅ –ü–æ–∏—Å–∫ generate_content.py:"
        find . -name "generate_content.py" -type f

    - name: Create necessary directories
      run: |
        echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
        mkdir -p content/posts
        mkdir -p assets/images/posts
        mkdir -p static/css
        mkdir -p layouts/_default
        mkdir -p layouts/partials

    - name: Generate AI content
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        STABILITYAI_KEY: ${{ secrets.STABILITYAI_KEY }}
      run: |
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        if [ -f ".github/scripts/generate_content.py" ]; then
            echo "üìù –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∏–ø—Ç –≤ .github/scripts/generate_content.py"
            cd .github/scripts/
            python generate_content.py
            cd ../../
        elif [ -f "generate_content.py" ]; then
            echo "üìù –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ—Ä–Ω–µ"
            python generate_content.py
        else
            echo "‚ùå –§–∞–π–ª generate_content.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:"
            find . -name "*.py" -type f
            exit 1
        fi
        
        echo "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—å–∏
        articles=$(find content/ -name "*.md" | wc -l)
        echo "üìÑ –°—Ç–∞—Ç–µ–π —Å–æ–∑–¥–∞–Ω–æ: $articles"
        if [ $articles -gt 0 ]; then
            find content/ -name "*.md" -exec ls -la {} \;
        else
            echo "‚ö†Ô∏è –°—Ç–∞—Ç—å–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        images=$(find assets/ -name "*.jpg" -o -name "*.png" | wc -l)
        echo "üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω–æ: $images"
        if [ $images -gt 0 ]; then
            find assets/ -name "*.jpg" -o -name "*.png" | head -5
        else
            echo "‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
        fi

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.125.7'
        extended: true

    - name: Build Hugo site
      run: |
        echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ —Å–∞–π—Ç–∞ Hugo..."
        echo "üìä –í–µ—Ä—Å–∏—è Hugo:"
        hugo version
        
        echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π:"
        ls -la
        ls -la content/ || echo "‚ùå –ù–µ—Ç content/"
        ls -la layouts/ || echo "‚ùå –ù–µ—Ç layouts/"
        ls -la static/ || echo "‚ùå –ù–µ—Ç static/"
        
        # –°–±–æ—Ä–∫–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        hugo --minify --logLevel info
        
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ public/:"
        if [ -d "public" ]; then
            ls -la public/
            echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            find public/ -name "*.html" | wc -l
            find public/ -name "*.css" | wc -l
            du -sh public/
        else
            echo "‚ùå –ü–∞–ø–∫–∞ public/ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
            exit 1
        fi

    - name: Test built site
      run: |
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞..."
        if [ -d "public" ]; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ index.html
            if [ -f "public/index.html" ]; then
                echo "‚úÖ index.html —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å HTML
                if grep -q "<!DOCTYPE html>" public/index.html; then
                    echo "‚úÖ HTML doctype –Ω–∞–π–¥–µ–Ω"
                else
                    echo "‚ö†Ô∏è HTML doctype –Ω–µ –Ω–∞–π–¥–µ–Ω"
                fi
            else
                echo "‚ùå index.html –Ω–µ –Ω–∞–π–¥–µ–Ω"
                exit 1
            fi
        else
            echo "‚ùå –ü–∞–ø–∫–∞ public/ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            exit 1
        fi

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        force_orphan: true
        keep_files: false
        enable_jekyll: false

    - name: Verify deployment
      run: |
        echo "‚úÖ Workflow —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
        echo "üåê –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://lybra-bee.github.io"
        echo "‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-5 –º–∏–Ω—É—Ç"
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        echo "üïí –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date '+%Y-%m-%d %H:%M:%S %Z')"
