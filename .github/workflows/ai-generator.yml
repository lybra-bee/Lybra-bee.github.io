name: AI Content Generator

on:
  workflow_dispatch:
    inputs:
      article_count:
        description: 'Number of articles to generate'
        required: true
        default: '1'
        type: choice
        options:
        - '1'
        - '2'
        - '3'
  schedule:
    - cron: '0 8 * * *'  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8:00 UTC

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-content:
    runs-on: ubuntu-latest
    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      HF_API_TOKEN: ${{ secrets.HF_API_TOKEN }}
      REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
      UNSPLASH_API_KEY: ${{ secrets.UNSPLASH_API_KEY }}
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: üì¶ Install dependencies
      run: |
        pip install requests pillow python-dotenv feedparser

    - name: üìÅ Create content directories
      run: |
        mkdir -p content/posts
        mkdir -p static/images/posts

    - name: ü§ñ Generate AI content
      run: |
        python .github/scripts/generate_content.py --count ${{ github.event.inputs.article_count }} --debug

    - name: üíæ Commit and push generated content
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é
        git fetch origin
        git reset --hard origin/main
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        git add content/posts/
        git add static/images/posts/
        
        # –ö–æ–º–º–∏—Ç –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if ! git diff --cached --quiet; then
            git commit -m "Auto-generated AI content $(date +'%Y-%m-%d %H:%M')"
            git push origin main
            echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        fi

  notify:
    runs-on: ubuntu-latest
    needs: generate-content
    if: always()
    steps:
    - name: üì® Send notification
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          MESSAGE="‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! $(date +'%Y-%m-%d %H:%M')"
        else
          MESSAGE="‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –°—Ç–∞—Ç—É—Å: ${{ job.status }}"
        fi
        
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{\"chat_id\": \"$TELEGRAM_CHAT_ID\", \"text\": \"$MESSAGE\"}"
