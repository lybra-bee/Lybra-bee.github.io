name: 🤖 AI Content Generator

on:
  schedule:
    - cron: '0 11 * * *'  # Ежедневно в 11:00 UTC (14:00 МСК)
  workflow_dispatch:       # Ручной запуск
  push:
    branches: [main]
    paths:
      - '.github/workflows/ai-generator.yml'

permissions:
  contents: write

jobs:
  generate-ai-content:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: ⬇️ Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: 📁 Create directory structure
      run: |
        echo "Creating necessary directories..."
        mkdir -p content/posts
        mkdir -p assets/images/posts
        mkdir -p static/css
        mkdir -p layouts/_default
        mkdir -p layouts/partials
        echo "✅ Directory structure ready"

    - name: 🔍 Check for existing content generator
      run: |
        echo "Looking for content generation scripts..."
        if [ -f ".github/scripts/generate_content.py" ]; then
            echo "✅ Found: .github/scripts/generate_content.py"
        elif [ -f "generate_content.py" ]; then
            echo "✅ Found: generate_content.py"
        else
            echo "📝 No generator found, will create sample content"
        fi

    - name: 🚀 Generate AI content
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        STABILITYAI_KEY: ${{ secrets.STABILITYAI_KEY }}
      run: |
        echo "Starting content generation..."
        
        # Create sample content if no generator found
        if [ ! -f ".github/scripts/generate_content.py" ] && [ ! -f "generate_content.py" ]; then
            echo "📝 Creating sample AI content..."
            
            cat > generate_sample.py << 'EOF'
import os
import random
from datetime import datetime, timedelta

def main():
    print("🎯 Generating sample AI content...")
    
    topics = [
        "Искусственный интеллект 2025: новые горизонты и вызовы",
        "Глубокое обучение: современные архитектуры нейросетей", 
        "Generative AI: творчество и инновации",
        "Компьютерное зрение: от распознавания к пониманию",
        "Обработка естественного языка: новые подходы",
        "Автономные системы и робототехника",
        "Этика и безопасность искусственного интеллекта",
        "AI в healthcare: диагностика и лечение будущего"
    ]
    
    os.makedirs("content/posts", exist_ok=True)
    
    num_articles = random.randint(2, 4)
    print(f"📊 Generating {num_articles} articles...")
    
    for i in range(num_articles):
        topic = random.choice(topics)
        date = (datetime.now() - timedelta(days=i)).strftime("%Y-%m-%d")
        slug = f"ai-article-{i+1}"
        filename = f"content/posts/{date}-{slug}.md"
        
        content = f"""---
title: "{topic}"
date: {date}
tags: ["AI", "машинное обучение", "2025"]
draft: false
---

## Введение
{topic} представляет собой rapidly развивающуюся область с огромным потенциалом.

## Основные направления
- **Технологические инновации**: Новые алгоритмы и архитектуры
- **Практическое применение**: Реальные бизнес-кейсы  
- **Будущее развитие**: Перспективы и тренды

## Технические детали
Современные подходы включают использование глубоких нейронных сетей, трансформеров и генеративных моделей.

## Заключение
{topic} продолжает revolutionизировать различные отрасли и открывать новые возможности.
"""
        
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"✅ Created: {filename}")
    
    print("🎉 Content generation completed!")

if __name__ == "__main__":
    main()
EOF

            python generate_sample.py
        else
            echo "🔧 Running existing content generator..."
            if [ -f ".github/scripts/generate_content.py" ]; then
                cd .github/scripts/
                python generate_content.py
                cd ../../
            else
                python generate_content.py
            fi
        fi

    - name: 📊 List generated content
      run: |
        echo "📁 Generated files:"
        find content/ -name "*.md" -exec echo "   📄 {}" \;
        echo "Total articles: $(find content/ -name "*.md" | wc -l)"

    - name: 💾 Commit and push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "github-actions@github.com"
        
        git add content/
        
        if git diff --cached --quiet; then
          echo "ℹ️ No changes to commit"
        else
          git commit -m "🤖 Auto-generated AI content: $(date +'%Y-%m-%d %H:%M')"
          git push origin main
          echo "✅ Changes pushed successfully"
        fi

    - name: 🎉 Completion message
      run: |
        echo "=========================================="
        echo "🤖 AI CONTENT GENERATION COMPLETE"
        echo "=========================================="
        echo "📅 Generated: $(date)"
        echo "📊 Articles: $(find content/ -name "*.md" | wc -l)"
        echo "🌐 Site will update on next deployment"
        echo "=========================================="
